#!/usr/bin/env python
from jira_releaser import JiraReleaser
import argparse
import os

JIRA_USER_KEY = 'JIRA_USER'
JIRA_PASSWORD_KEY = 'JIRA_PASSWORD'

def main():
	parser = argparse.ArgumentParser()
	parser.add_argument('-p', '--project-key', required=True)
	parser.add_argument('-u', '--jira-url', required=True)
	parser.add_argument('-r', '--repo-root', required=False)
	parser.add_argument('-U', '--jira-username', required=False)
	parser.add_argument('-P', '--jira-password', required=False)
	parser.add_argument('--from-commit', help="Hash of git commit to start grabbing issues from", required=True)
	parser.add_argument('--to-commit')
	args = parser.parse_args()
	jira_username = os.environ.get(JIRA_USER_KEY, None)
	jira_password = os.environ.get(JIRA_PASSWORD_KEY, None)
	if jira_username is not None and jira_password is not None:
		updater = JiraReleaser(args.project_key, args.jira_url, jira_username=jira_username, jira_password=jira_password, repo_root=args.repo_root, from_commit=args.from_commit, to_commit=args.to_commit)
		version = updater.create_jira_version()
		updater.update_issues(updater.get_issues(updater.list_commits()))
		version.update(fields={'released': True})

if __name__ == '__main__':
	main()